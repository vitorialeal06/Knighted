--
-- PostgreSQL database dump
--

-- Dumped from database version 14.17 (Ubuntu 14.17-0ubuntu0.22.04.1)
-- Dumped by pg_dump version 14.17 (Ubuntu 14.17-0ubuntu0.22.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: knighted_schemas; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA knighted_schemas;


ALTER SCHEMA knighted_schemas OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: abertura; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.abertura (
    id_abertura integer NOT NULL,
    nome character varying(100)[],
    movimento character varying(100)[],
    descricao text
);


ALTER TABLE knighted_schemas.abertura OWNER TO postgres;

--
-- Name: abertura_id_abertura_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

CREATE SEQUENCE knighted_schemas.abertura_id_abertura_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE knighted_schemas.abertura_id_abertura_seq OWNER TO postgres;

--
-- Name: abertura_id_abertura_seq; Type: SEQUENCE OWNED BY; Schema: knighted_schemas; Owner: postgres
--

ALTER SEQUENCE knighted_schemas.abertura_id_abertura_seq OWNED BY knighted_schemas.abertura.id_abertura;


--
-- Name: auth_group; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE knighted_schemas.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE knighted_schemas.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME knighted_schemas.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE knighted_schemas.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE knighted_schemas.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME knighted_schemas.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE knighted_schemas.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE knighted_schemas.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME knighted_schemas.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE knighted_schemas.auth_user OWNER TO postgres;

--
-- Name: auth_user_groups; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE knighted_schemas.auth_user_groups OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE knighted_schemas.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME knighted_schemas.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE knighted_schemas.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME knighted_schemas.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE knighted_schemas.auth_user_user_permissions OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE knighted_schemas.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME knighted_schemas.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE knighted_schemas.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE knighted_schemas.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME knighted_schemas.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE knighted_schemas.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE knighted_schemas.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME knighted_schemas.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE knighted_schemas.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE knighted_schemas.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME knighted_schemas.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE knighted_schemas.django_session OWNER TO postgres;

--
-- Name: jogador; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.jogador (
    id_jogador integer NOT NULL,
    nome character varying(100),
    data_nascimento date,
    pais character varying(25),
    elo integer[]
);


ALTER TABLE knighted_schemas.jogador OWNER TO postgres;

--
-- Name: jogador_id_jogador_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

CREATE SEQUENCE knighted_schemas.jogador_id_jogador_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE knighted_schemas.jogador_id_jogador_seq OWNER TO postgres;

--
-- Name: jogador_id_jogador_seq; Type: SEQUENCE OWNED BY; Schema: knighted_schemas; Owner: postgres
--

ALTER SEQUENCE knighted_schemas.jogador_id_jogador_seq OWNED BY knighted_schemas.jogador.id_jogador;


--
-- Name: movimento; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.movimento (
    id_movimento integer NOT NULL,
    id_partida integer,
    id_jogador integer,
    numero_jogada integer
);


ALTER TABLE knighted_schemas.movimento OWNER TO postgres;

--
-- Name: movimento_id_movimento_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

CREATE SEQUENCE knighted_schemas.movimento_id_movimento_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE knighted_schemas.movimento_id_movimento_seq OWNER TO postgres;

--
-- Name: movimento_id_movimento_seq; Type: SEQUENCE OWNED BY; Schema: knighted_schemas; Owner: postgres
--

ALTER SEQUENCE knighted_schemas.movimento_id_movimento_seq OWNED BY knighted_schemas.movimento.id_movimento;


--
-- Name: partida; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.partida (
    id_partida integer NOT NULL,
    id_jogador_brancas integer,
    id_jogador_pretas integer,
    id_abertura integer,
    data_partida date,
    duracao timestamp with time zone,
    CONSTRAINT chk_jogadores_diferentes CHECK ((id_jogador_pretas <> id_jogador_brancas))
);


ALTER TABLE knighted_schemas.partida OWNER TO postgres;

--
-- Name: partida_id_partida_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

CREATE SEQUENCE knighted_schemas.partida_id_partida_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE knighted_schemas.partida_id_partida_seq OWNER TO postgres;

--
-- Name: partida_id_partida_seq; Type: SEQUENCE OWNED BY; Schema: knighted_schemas; Owner: postgres
--

ALTER SEQUENCE knighted_schemas.partida_id_partida_seq OWNED BY knighted_schemas.partida.id_partida;


--
-- Name: torneio; Type: TABLE; Schema: knighted_schemas; Owner: postgres
--

CREATE TABLE knighted_schemas.torneio (
    nome_torneio character varying(100)[],
    localizacao character varying(100)[],
    data_inicio date,
    date_fim date,
    id_torneio integer NOT NULL
);


ALTER TABLE knighted_schemas.torneio OWNER TO postgres;

--
-- Name: torneio_id_torneio_seq; Type: SEQUENCE; Schema: knighted_schemas; Owner: postgres
--

CREATE SEQUENCE knighted_schemas.torneio_id_torneio_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE knighted_schemas.torneio_id_torneio_seq OWNER TO postgres;

--
-- Name: torneio_id_torneio_seq; Type: SEQUENCE OWNED BY; Schema: knighted_schemas; Owner: postgres
--

ALTER SEQUENCE knighted_schemas.torneio_id_torneio_seq OWNED BY knighted_schemas.torneio.id_torneio;


--
-- Name: abertura id_abertura; Type: DEFAULT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.abertura ALTER COLUMN id_abertura SET DEFAULT nextval('knighted_schemas.abertura_id_abertura_seq'::regclass);


--
-- Name: jogador id_jogador; Type: DEFAULT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.jogador ALTER COLUMN id_jogador SET DEFAULT nextval('knighted_schemas.jogador_id_jogador_seq'::regclass);


--
-- Name: movimento id_movimento; Type: DEFAULT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.movimento ALTER COLUMN id_movimento SET DEFAULT nextval('knighted_schemas.movimento_id_movimento_seq'::regclass);


--
-- Name: partida id_partida; Type: DEFAULT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.partida ALTER COLUMN id_partida SET DEFAULT nextval('knighted_schemas.partida_id_partida_seq'::regclass);


--
-- Name: torneio id_torneio; Type: DEFAULT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.torneio ALTER COLUMN id_torneio SET DEFAULT nextval('knighted_schemas.torneio_id_torneio_seq'::regclass);


--
-- Data for Name: abertura; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.abertura (id_abertura, nome, movimento, descricao) FROM stdin;
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2025-04-09 18:32:53.644762-03
2	auth	0001_initial	2025-04-09 18:32:53.764821-03
3	admin	0001_initial	2025-04-09 18:32:53.797697-03
4	admin	0002_logentry_remove_auto_add	2025-04-09 18:32:53.803352-03
5	admin	0003_logentry_add_action_flag_choices	2025-04-09 18:32:53.808818-03
6	contenttypes	0002_remove_content_type_name	2025-04-09 18:32:53.826209-03
7	auth	0002_alter_permission_name_max_length	2025-04-09 18:32:53.832133-03
8	auth	0003_alter_user_email_max_length	2025-04-09 18:32:53.839376-03
9	auth	0004_alter_user_username_opts	2025-04-09 18:32:53.845128-03
10	auth	0005_alter_user_last_login_null	2025-04-09 18:32:53.851387-03
11	auth	0006_require_contenttypes_0002	2025-04-09 18:32:53.854044-03
12	auth	0007_alter_validators_add_error_messages	2025-04-09 18:32:53.860748-03
13	auth	0008_alter_user_username_max_length	2025-04-09 18:32:53.873189-03
14	auth	0009_alter_user_last_name_max_length	2025-04-09 18:32:53.881376-03
15	auth	0010_alter_group_name_max_length	2025-04-09 18:32:53.893061-03
16	auth	0011_update_proxy_permissions	2025-04-09 18:32:53.898629-03
17	auth	0012_alter_user_first_name_max_length	2025-04-09 18:32:53.904671-03
18	sessions	0001_initial	2025-04-09 18:32:53.926312-03
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.django_session (session_key, session_data, expire_date) FROM stdin;
\.


--
-- Data for Name: jogador; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.jogador (id_jogador, nome, data_nascimento, pais, elo) FROM stdin;
\.


--
-- Data for Name: movimento; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.movimento (id_movimento, id_partida, id_jogador, numero_jogada) FROM stdin;
\.


--
-- Data for Name: partida; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.partida (id_partida, id_jogador_brancas, id_jogador_pretas, id_abertura, data_partida, duracao) FROM stdin;
\.


--
-- Data for Name: torneio; Type: TABLE DATA; Schema: knighted_schemas; Owner: postgres
--

COPY knighted_schemas.torneio (nome_torneio, localizacao, data_inicio, date_fim, id_torneio) FROM stdin;
\.


--
-- Name: abertura_id_abertura_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.abertura_id_abertura_seq', 1, false);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.auth_permission_id_seq', 24, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.auth_user_id_seq', 1, false);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.django_admin_log_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.django_content_type_id_seq', 6, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.django_migrations_id_seq', 18, true);


--
-- Name: jogador_id_jogador_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.jogador_id_jogador_seq', 1, false);


--
-- Name: movimento_id_movimento_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.movimento_id_movimento_seq', 1, false);


--
-- Name: partida_id_partida_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.partida_id_partida_seq', 1, false);


--
-- Name: torneio_id_torneio_seq; Type: SEQUENCE SET; Schema: knighted_schemas; Owner: postgres
--

SELECT pg_catalog.setval('knighted_schemas.torneio_id_torneio_seq', 1, false);


--
-- Name: abertura abertura_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.abertura
    ADD CONSTRAINT abertura_pkey PRIMARY KEY (id_abertura);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: jogador jogador_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.jogador
    ADD CONSTRAINT jogador_pkey PRIMARY KEY (id_jogador);


--
-- Name: movimento movimento_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.movimento
    ADD CONSTRAINT movimento_pkey PRIMARY KEY (id_movimento);


--
-- Name: partida partida_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.partida
    ADD CONSTRAINT partida_pkey PRIMARY KEY (id_partida);


--
-- Name: torneio torneio_pkey; Type: CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.torneio
    ADD CONSTRAINT torneio_pkey PRIMARY KEY (id_torneio);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON knighted_schemas.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON knighted_schemas.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON knighted_schemas.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON knighted_schemas.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX auth_user_groups_group_id_97559544 ON knighted_schemas.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON knighted_schemas.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON knighted_schemas.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON knighted_schemas.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX auth_user_username_6821ab7c_like ON knighted_schemas.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON knighted_schemas.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON knighted_schemas.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON knighted_schemas.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: knighted_schemas; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON knighted_schemas.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES knighted_schemas.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES knighted_schemas.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES knighted_schemas.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES knighted_schemas.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES knighted_schemas.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES knighted_schemas.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES knighted_schemas.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES knighted_schemas.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES knighted_schemas.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: partida id_abertura; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.partida
    ADD CONSTRAINT id_abertura FOREIGN KEY (id_abertura) REFERENCES knighted_schemas.abertura(id_abertura);


--
-- Name: movimento id_jogador; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.movimento
    ADD CONSTRAINT id_jogador FOREIGN KEY (id_jogador) REFERENCES knighted_schemas.jogador(id_jogador) NOT VALID;


--
-- Name: partida id_jogador_brancas; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.partida
    ADD CONSTRAINT id_jogador_brancas FOREIGN KEY (id_jogador_brancas) REFERENCES knighted_schemas.jogador(id_jogador) NOT VALID;


--
-- Name: partida id_jogador_pretas; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.partida
    ADD CONSTRAINT id_jogador_pretas FOREIGN KEY (id_jogador_pretas) REFERENCES knighted_schemas.jogador(id_jogador) NOT VALID;


--
-- Name: movimento id_partida; Type: FK CONSTRAINT; Schema: knighted_schemas; Owner: postgres
--

ALTER TABLE ONLY knighted_schemas.movimento
    ADD CONSTRAINT id_partida FOREIGN KEY (id_partida) REFERENCES knighted_schemas.partida(id_partida) NOT VALID;


--
-- Name: TABLE abertura; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.abertura TO knighted;


--
-- Name: TABLE auth_group; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.auth_group TO knighted;


--
-- Name: TABLE auth_group_permissions; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.auth_group_permissions TO knighted;


--
-- Name: TABLE auth_permission; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.auth_permission TO knighted;


--
-- Name: TABLE auth_user; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.auth_user TO knighted;


--
-- Name: TABLE auth_user_groups; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.auth_user_groups TO knighted;


--
-- Name: TABLE auth_user_user_permissions; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.auth_user_user_permissions TO knighted;


--
-- Name: TABLE django_admin_log; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.django_admin_log TO knighted;


--
-- Name: TABLE django_content_type; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.django_content_type TO knighted;


--
-- Name: TABLE django_migrations; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.django_migrations TO knighted;


--
-- Name: TABLE django_session; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.django_session TO knighted;


--
-- Name: TABLE jogador; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.jogador TO knighted;


--
-- Name: TABLE movimento; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.movimento TO knighted;


--
-- Name: TABLE partida; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.partida TO knighted;


--
-- Name: TABLE torneio; Type: ACL; Schema: knighted_schemas; Owner: postgres
--

GRANT ALL ON TABLE knighted_schemas.torneio TO knighted;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: -; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON TABLES  TO knighted;


--
-- PostgreSQL database dump complete
--

